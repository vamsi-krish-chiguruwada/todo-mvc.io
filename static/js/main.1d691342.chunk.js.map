{"version":3,"sources":["Components/TodoHeader/TodoHeader.js","Assects/Images/arrow_drop_down-black-18dp.svg","Components/TodoSearchArea/TodoSearchArea.js","Assects/Images/cancel-24px.svg","Assects/Images/radio_button_unchecked-24px.svg","Assects/Images/radio_button_checked-24px.svg","Components/TodoItemIcon/TodoItemIcon.js","Components/TodoItem/TodoItem.js","Components/TodoFilterButton/TodoFilterButton.js","Components/TodoFilter/TodoFilter.js","Components/TodoListMvc/TodoListMvc.js","App.js","reportWebVitals.js","index.js"],"names":["TodoHeader","props","className","TodoSearchArea","onClick","selectAllTodosHandler","totalCount","src","Logo","alt","onSubmit","inputSubmitHandler","type","placeholder","onChange","inputChangeHandler","value","inputText","TodoItemIcon","toggleSellect","text","checked","CompletedIcon","PendingIcon","TodoItem","useState","closeIconDisplay","setShowIconDisplay","onEdit","setOnEdit","editText","setEditText","customStrikeClass","onMouseEnter","onMouseLeave","onDoubleClick","e","preventDefault","handleEditSubmit","target","removeTodo","CloseIcon","TodoFilterButton","classCustom","filter","btnText","filterBtnsHandler","TodoFilter","ActiveCount","map","per","clearCompleted","TodoListMvc","todos","setTodos","checkedAll","setCheckedAll","setinputText","SetFilter","warning","setWarning","useEffect","temp","JSON","parse","localStorage","getItem","window","setItem","stringify","splice","findindex_list_objs","i","getTodosByFilter","obj","push","setTimeout","length","unshift","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d691342.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './TodoHeader.css';\r\n\r\nconst TodoHeader = (props)=> {\r\n  return (\r\n    <div  className=\"TodoHeader\">\r\n      <h1 className = \"TodoHeader__header\">todos</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default TodoHeader;","export default __webpack_public_path__ + \"static/media/arrow_drop_down-black-18dp.200220c5.svg\";","import React from \"react\";\r\nimport Logo from \"../../Assects/Images/arrow_drop_down-black-18dp.svg\";\r\nimport \"./TodoSearchArea.css\";\r\n\r\nconst TodoSearchArea = (props) => {\r\n  return (\r\n    <div className=\"TodoSearchArea\">\r\n      <div onClick={props.selectAllTodosHandler} className=\"TodoSearchArea__icon\">\r\n        {props.totalCount ? <img src={Logo} alt=\"\\/\" /> : null}\r\n      </div>\r\n      <form className=\"TodoSearchArea__form\" onSubmit={props.inputSubmitHandler}>\r\n        <input\r\n          className=\"TodoSearchArea__input\"\r\n          type=\"text\"\r\n          placeholder=\"What needs to be done ?\"\r\n          onChange={props.inputChangeHandler}\r\n          value={props.inputText}\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoSearchArea;\r\n","export default __webpack_public_path__ + \"static/media/cancel-24px.f4127331.svg\";","export default __webpack_public_path__ + \"static/media/radio_button_unchecked-24px.f6872386.svg\";","export default __webpack_public_path__ + \"static/media/radio_button_checked-24px.5cbad1ef.svg\";","import React from \"react\";\r\nimport './TodoItemIcon.css';\r\nimport PendingIcon from \"../../Assects/Images/radio_button_unchecked-24px.svg\";\r\nimport CompletedIcon from \"../../Assects/Images/radio_button_checked-24px.svg\";\r\n\r\nconst TodoItemIcon = (props)=> {\r\n  return (\r\n    <div\r\n        onClick={() => props.toggleSellect(props.text)}\r\n        className=\"TodoItem__checkbox iconHolder\"\r\n      >\r\n        {props.checked ? (\r\n          <img src={CompletedIcon} alt={props.text} />\r\n        ) : (\r\n          <img src={PendingIcon} alt={props.text} />\r\n        )}\r\n      </div>\r\n  );\r\n}\r\nexport default TodoItemIcon;","import React, { useState } from \"react\";\r\n// import PendingIcon from \"../../Assects/Images/radio_button_unchecked-24px.svg\";\r\n// import CompletedIcon from \"../../Assects/Images/radio_button_checked-24px.svg\";\r\nimport CloseIcon from \"../../Assects/Images/cancel-24px.svg\";\r\nimport \"./TodoItem.css\";\r\nimport TodoItemIcon from \"../TodoItemIcon/TodoItemIcon\";\r\n\r\nconst TodoItem = (props) => {\r\n  const [closeIconDisplay, setShowIconDisplay] = useState(false);\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n\r\n  const handleDoubleClick = () => {\r\n    setOnEdit(true);\r\n    setEditText(props.text);\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditText(e.target.value);\r\n  };\r\n\r\n  const editInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleEditSubmit(props.text, editText);\r\n    setOnEdit(false);\r\n  };\r\n\r\n  var customStrikeClass = \"todo__text\";\r\n  if (props.checked) {\r\n    customStrikeClass = \"todo__text todo__text--strike\";\r\n  }\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setShowIconDisplay(true)}\r\n      onMouseLeave={() => setShowIconDisplay(false)}\r\n      className=\"TodoItem\"\r\n    >\r\n      <TodoItemIcon checked={props.checked} toggleSellect={props.toggleSellect} text={props.text} />\r\n      <div onDoubleClick={handleDoubleClick} className=\"TodoItem__todo\">\r\n        {onEdit ? (\r\n          <form\r\n            // onSubmit={()=>props.handleEditSubmit(props.text,editText)}\r\n            onSubmit={editInputSubmit}\r\n            className=\"TodoItem__todo\"\r\n          >\r\n            <input\r\n              onChange={handleEditChange}\r\n              className=\"TodoItem__todo TodoItem__input\"\r\n              type=\"text\"\r\n              value={editText}\r\n            />\r\n          </form>\r\n        ) : (\r\n          <p className={customStrikeClass}>{props.text}</p>\r\n        )}\r\n      </div>\r\n      <div onClick={() => props.removeTodo(props.text)} className=\"TodoItem__close iconHolder\">\r\n        {closeIconDisplay ? <img src={CloseIcon} alt={props.text} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./TodoFilterButton.css\";\r\n\r\nconst TodoFilterButton = (props) => {\r\n  // console.log(props)\r\n  var classCustom = \"TodoFilterButton\";\r\n  if(props.filter===props.btnText){\r\n    classCustom = \"TodoFilterButton TodoFilterButton--active\";\r\n  }\r\n  return (\r\n    <div onClick = {()=>props.filterBtnsHandler(`${props.btnText}`)}  className={classCustom}>\r\n      <p className=\"TodoFilterButton__text\">{props.btnText}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoFilterButton;\r\n","import React from \"react\";\r\nimport TodoFilterButton from \"../TodoFilterButton/TodoFilterButton\";\r\nimport \"./TodoFilter.css\";\r\n\r\nconst TodoFilter = (props) => {\r\n  const filters = [\"All\", \"Active\", \"Completed\"];\r\n\r\n  return (\r\n    <div className=\"TodoFilter\">\r\n      <div className=\"TodoFilter__pendingMsg\">\r\n        <p className=\"filerText\">\r\n          {props.ActiveCount} {props.ActiveCount == 1 ? \"item\" : \"items\"} left\r\n        </p>\r\n      </div>\r\n      <div className=\"TodoFilter__filter\">\r\n        {filters.map((per) => {\r\n          return (\r\n            <TodoFilterButton\r\n              key={per}\r\n              filter={props.filter}\r\n              filterBtnsHandler={props.filterBtnsHandler}\r\n              btnText={per}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div onClick={props.clearCompleted} className=\"TodoFilter__clearMsg\">\r\n        {props.totalCount === props.ActiveCount ? null : (\r\n          <p className=\"filerText\">clear completed</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoFilter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TodoHeader from \"../TodoHeader/TodoHeader\";\r\nimport TodoSearchArea from \"../TodoSearchArea/TodoSearchArea\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nimport TodoFilter from \"../TodoFilter/TodoFilter\";\r\nimport \"./TodoListMvc.css\";\r\n\r\nconst TodoListMvc = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const [checkedAll, setCheckedAll] = useState(false);\r\n  const [inputText, setinputText] = useState(\"\");\r\n  const [filter, SetFilter] = useState(\"All\");\r\n  const [warning, setWarning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let temp = JSON.parse(localStorage.getItem(\"todolist\"));\r\n    if (temp) {\r\n      setTodos(temp);\r\n    } else {\r\n      setTodos([]);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todolist\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const inputChangeHandler = (e) => {\r\n    setinputText(e.target.value);\r\n  };\r\n\r\n  const inputSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!findindex_list_objs(inputText)) {\r\n      let temp = [...todos];\r\n      temp.unshift({ text: inputText, checked: false });\r\n      setTodos(temp);\r\n      setinputText(\"\");\r\n    } else {\r\n      setWarning(true);\r\n      setTimeout(() => {\r\n        setWarning(false);\r\n      }, 400);\r\n    }\r\n  };\r\n\r\n  const removeTodo = (per) => {\r\n    let temp = [...todos];\r\n    temp.splice(findindex_list_objs(per), 1);\r\n    setTodos(temp);\r\n  };\r\n\r\n  const clearCompleted = () => {\r\n    setTodos(getTodosByFilter(\"Active\"));\r\n  };\r\n\r\n  const toggleSellect = (per) => {\r\n    let temp = [...todos];\r\n    temp[findindex_list_objs(per)].checked = !todos[findindex_list_objs(per)].checked;\r\n    setTodos(temp);\r\n  };\r\n\r\n  const findindex_list_objs = (per) => {\r\n    for (let i in todos) {\r\n      if (todos[i].text === per) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectAllTodosHandler = () => {\r\n    let temp = [];\r\n    todos.map((per) => {\r\n      temp.push({ text: per.text, checked: !checkedAll });\r\n    });\r\n    setTodos(temp);\r\n    setCheckedAll(!checkedAll);\r\n  };\r\n\r\n  const filterBtnsHandler = (per) => {\r\n    SetFilter(per);\r\n  };\r\n\r\n  const getTodosByFilter = (per) => {\r\n    if (per === \"Active\") {\r\n      let temp = [];\r\n      todos.map((obj) => {\r\n        if (!obj.checked) {\r\n          temp.push(obj);\r\n        }\r\n      });\r\n      return temp;\r\n    } else if (per === \"Completed\") {\r\n      let temp = [];\r\n      todos.map((obj) => {\r\n        if (obj.checked) {\r\n          temp.push(obj);\r\n        }\r\n      });\r\n      return temp;\r\n    } else return todos;\r\n  };\r\n  const handleEditSubmit = (text, editText) => {\r\n    if (!findindex_list_objs(editText)) {\r\n      let temp = [...todos];\r\n      temp[findindex_list_objs(text)].text = editText;\r\n      setTodos(temp);\r\n      setinputText(\"\");\r\n    } else {\r\n      setWarning(true);\r\n      setTimeout(() => {\r\n        setWarning(false);\r\n      }, 600);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"TodoListMvc\">\r\n      <TodoHeader />\r\n      <div className=\"TodoListMvc__body\">\r\n        <TodoSearchArea\r\n          totalCount={todos.length}\r\n          selectAllTodosHandler={selectAllTodosHandler}\r\n          inputChangeHandler={inputChangeHandler}\r\n          inputText={inputText}\r\n          inputSubmitHandler={inputSubmitHandler}\r\n          // inputChangeHandler={inputChangeHandler}\r\n        />\r\n        {warning ? <p>Already Exist</p> : null}\r\n        {getTodosByFilter(filter).map((per) => {\r\n          return (\r\n            <TodoItem\r\n              key={per.text}\r\n              toggleSellect={toggleSellect}\r\n              removeTodo={removeTodo}\r\n              text={per.text}\r\n              checked={per.checked}\r\n              handleEditSubmit={handleEditSubmit}\r\n            />\r\n          );\r\n        })}\r\n        {todos.length > 0 ? (\r\n          <TodoFilter\r\n            ActiveCount={getTodosByFilter(\"Active\").length}\r\n            totalCount={todos.length}\r\n            filterBtnsHandler={filterBtnsHandler}\r\n            filter={filter}\r\n            clearCompleted={clearCompleted}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListMvc;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoListMvc from \"./Components/TodoListMvc/TodoListMvc\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <div className=\"todoWraper\"> */}\n        <TodoListMvc />\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n/****************************************\\\n\n\nimport React from \"react\";\nimport './TodoItemIcon.css';\n\nconst TodoItemIcon = ()=> {\n  return (\n    <div className=\"TodoItemIcon\">\n      \n    </div>\n  );\n}\nexport default TodoItemIcon;\n\n\n\\****************************************/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}